hostname: zeebe-startinstance
zeebe_jar: /tmp/zeebe-nonblocking-start.jar
go_dist_tar_gz: /tmp/go1.11.2.linux-amd64.tar.gz
go_extract_dir: /usr/local/
zeebe_client_contactpoint: "{{hostvars[groups['tag_zeebe_broker_true'][0]]['ec2_public_dns_name']+':26500'}}"
nexus_url: https://oss.sonatype.org
ansible_python_interpreter: /usr/bin/python3
zeebe_brokers_to_monitor: "{% for host in groups['tag_zeebe_broker_true'] %}    - {{hostvars[host]['ec2_public_dns_name']}}\n{% endfor %}"
os_brokers_to_monitor: "{% for host in groups['tag_zeebe_broker_true'] %}    - {{hostvars[host]['ec2_public_dns_name']}}:9100\n{% endfor %}"
# ZEEBE_BROKER_ADDRESS - Broker to register with for work. Note: this  implementation relies on the number of brokers and clients being equal
# ZEEBE_BROKERS - Brokers to generate workflow instances on. The Go workflow instance generator will hit all of them.

# This is used to populate the .env file for the dockerised go workers
zeebe_broker_address: "{% for n in range(groups['tag_jobworker_client_true']|length) %}{% if ec2_public_dns_name == hostvars[groups['tag_jobworker_client_true'][n]]['ec2_public_dns_name']%}{{ hostvars[groups['tag_zeebe_broker_true'][n]]['ec2_public_dns_name'] }}{% endif %}{% endfor %}"

# These are for the generator and the deploy-workflow tools
os_environment:
- key: ZEEBE_BROKERS
  value : "{% for host in groups['tag_zeebe_broker_true'] %}{{hostvars[host]['ec2_public_dns_name']}}{% if not loop.last %}, {% endif %}{% endfor %}"
- key: ZEEBE_BROKER_ADDRESS
  value: "{% for n in range(groups['tag_jobworker_client_true']|length) %}{% if ec2_public_dns_name == hostvars[groups['tag_jobworker_client_true'][n]]['ec2_public_dns_name']%}{{ hostvars[groups['tag_zeebe_broker_true'][n]]['ec2_public_dns_name'] }}{% endif %}{% endfor %}"
